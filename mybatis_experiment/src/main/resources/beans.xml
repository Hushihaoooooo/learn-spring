<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         ">

<!--    spring包扫描-->
    <context:component-scan base-package="com.shihaohu"/>
<!--    druid数据源配置-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <!-- 基本属性 url、user、password -->
        <property name="url" value="jdbc:mysql://localhost/mybatis_demo"/>
        <property name="username" value="root"/>
        <property name="password" value="12345678"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>
    <!---事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--事务注解-->
    <tx:annotation-driven transaction-manager="transactionManager" />


    <!---Spring整合 mybatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="cn.edu.zust.se.pojo"/>
        <property name="mapperLocations" value="classpath*:com/shihaohu/mapper/*.xml"/>
    </bean>
    <!---Spring 整合mybatis扫描包配置-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!--        xml配置mybatis映射-->
<!--        <property name="basePackage" value="cn.edu.zust.se.mapper.xml" />-->
<!--        注解配置mybatis映射-->
        <property name="basePackage" value="com.shihaohu.mapper.anno" />
    </bean>

<!--    Spring整合JPA/Hibernate-->
<!--    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
<!--        <property name="dataSource" ref="dataSource" />-->
<!--        <property name="packagesToScan" value="cn.edu.zust.se.jpaentity" />-->
<!--        <property name="jpaVendorAdapter">-->
<!--            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>-->
<!--        </property>-->
<!--        <property name="jpaProperties">-->
<!--            <props>-->
<!--                <prop key="hibernate.show_sql">true</prop>-->
<!--                <prop key="hibernate.format_sql">true</prop>-->
<!--                <prop key="hibernate.hbm2ddl.auto">update</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

</beans>
